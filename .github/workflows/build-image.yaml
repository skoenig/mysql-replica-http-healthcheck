name: Build & Release Image

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

env:
  DEBIAN_VERSION: "debian-11"
  MYSQL_VERSION: "5.7"
  RSYNC_MODULE: "rsync://cdimage.debian.org/cdimage/cloud/bullseye/"
  IMAGE_BASENAME: "debian-11-genericcloud-amd64"

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-system rsync curl

      - name: Determine latest Debian image
        id: debian-image
        run: |
          set -euo pipefail
          COMMIT_SHORT=$(git rev-parse --short=8 HEAD)

          folders=$(rsync --list-only "$RSYNC_MODULE" \
            | awk '{print $NF}' \
            | grep -E '^[0-9]{8}-[0-9]+/?$' \
            | sed 's:/$::')

          if [ -z "$folders" ]; then
            echo "No dated folders found"
            exit 1
          fi

          latest_folder=$(printf '%s\n' $folders | sort -t- -k1,1n -k2,2n | tail -n1)
          BASE_URL="https://cdimage.debian.org/cdimage/cloud/bullseye/${latest_folder}"
          IMAGE_URL="${BASE_URL}/${IMAGE_BASENAME}-${latest_folder}.qcow2"

          echo "Checking $IMAGE_URL ..."
          curl -sSf --head "$IMAGE_URL" >/dev/null

          RELEASE_TAG="${DEBIAN_VERSION}-${MYSQL_VERSION}-${COMMIT_SHORT}-${latest_folder}"

          echo "latest_folder=$latest_folder" >> "$GITHUB_OUTPUT"
          echo "base_url=$BASE_URL" >> "$GITHUB_OUTPUT"
          echo "image_url=$IMAGE_URL" >> "$GITHUB_OUTPUT"
          echo "release_tag=$RELEASE_TAG" >> "$GITHUB_OUTPUT"

      - name: Setup Packer
        uses: hashicorp/setup-packer@main

      - name: Build image with Packer
        env:
          PACKER_LOG: "1"
          IMAGE_URL: ${{ steps.debian-image.outputs.image_url }}
        run: |
          packer init .
          packer build \
            -var kvm=false \
            -var iso_base_url="$(dirname "${IMAGE_URL}")" \
            -var image_name="$(basename "${IMAGE_URL}")" \
            .

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.debian-image.outputs.release_tag }}
          files: images/**/*
